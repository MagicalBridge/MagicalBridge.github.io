(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{315:function(t,_,v){t.exports=v.p+"assets/img/02.b98cca3b.png"},316:function(t,_,v){t.exports=v.p+"assets/img/03.50473cb6.png"},317:function(t,_,v){t.exports=v.p+"assets/img/04.e9585f0d.png"},458:function(t,_,v){"use strict";v.r(_);var i=v(14),e=Object(i.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"计算机网络"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#计算机网络"}},[t._v("#")]),t._v(" 计算机网络")]),t._v(" "),_("h2",{attrs:{id:"http和https有什么区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http和https有什么区别"}},[t._v("#")]),t._v(" HTTP和HTTPS有什么区别？")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://juejin.cn/post/6844903471565504526",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文章"),_("OutboundLink")],1)]),t._v(" "),_("p",[t._v("超文本传输协议也就是我们所说的 HTTP 协议被用在web浏览器和服务器之间传递信息。")]),t._v(" "),_("p",[t._v("HTTP协议有以下特点：")]),t._v(" "),_("ul",[_("li",[t._v("通信使用明文（不加密），内容可能会被窃听")]),t._v(" "),_("li",[t._v("不验证通信双方的身份，因此有可能遭到伪装")]),t._v(" "),_("li",[t._v("无法证明报文的完整性，所以有可能已经遭到篡改")])]),t._v(" "),_("p",[t._v("如果攻击者截取了浏览器和网站服务器之间的传输报文，就能够直接获取其中的信息，并且可能会伪造这些信息，所以HTTP不适合传输一些敏感信息，例如：身份证号码、银行卡号码等等。")]),t._v(" "),_("p",[t._v("为了改进上述的几种问题，出现了HTTPS，它其实是HTTP和SSL(安全套阶层)的一个组合。HTTP + 加密 + 认证 + 完整性保护 = HTTPS")]),t._v(" "),_("p",[t._v("HTTPS的作用主要是两个：")]),t._v(" "),_("ul",[_("li",[t._v("建立一个安全的信息通道")]),t._v(" "),_("li",[t._v("通过证书机制，确认网站的真实性")])]),t._v(" "),_("p",[t._v("总结一下他们两者的区别:")]),t._v(" "),_("ul",[_("li",[t._v("https协议需要申请ca证书，这些证书一般是收费的，是由权威的第三方机构颁发的。")]),t._v(" "),_("li",[t._v("http协议是明文传输的，https则是具有安全性的ssl加密传输协议。")]),t._v(" "),_("li",[t._v("http和https使用的的连接方式也不一样，用的端口也不一样，前者是80，后者是443")]),t._v(" "),_("li",[t._v("http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。")])]),t._v(" "),_("h2",{attrs:{id:"https的工作原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#https的工作原理"}},[t._v("#")]),t._v(" HTTPS的工作原理？")]),t._v(" "),_("ul",[_("li",[t._v("客户端发起HTTPS请求，用户在浏览器里输入一个https网址，然后连接到server的443端口。")]),t._v(" "),_("li",[t._v("服务端的配置，采用HTTPS协议的服务器必须要有一套数字证书。这套证书其实就是一对公钥和私钥。")]),t._v(" "),_("li",[t._v("传送证书，这个证书其实就是公钥，只是包含了很多信息，如证书的颁发机构，过期时间等等。")]),t._v(" "),_("li",[t._v("客户端解析证书，如果发现没有问题，那么就生成一个随机值，然后用证书对该随机值进行加密，除非有私钥，否则看不到内容。")]),t._v(" "),_("li",[t._v("传送加密信息，传送的是用证书加密后的随机值，目的就是让服务端得到这个随机值，以后客户端和服务端的通信就可以通过这个随机值来进行加密解密了")]),t._v(" "),_("li",[t._v("服务段解密信息，服务端用私钥解密后，得到了客户端传过来的随机值，然后把内容通过该值进行对称加密")]),t._v(" "),_("li",[t._v("传输加密后的信息，这部分信息是服务段用私钥加密后的信息，可以在客户端被还原。")]),t._v(" "),_("li",[t._v("客户端解密信息，客户端用之前生成的私钥解密服务段传过来的信息，于是获取了解密后的内容。")])]),t._v(" "),_("p",[_("img",{attrs:{src:v(315),alt:"HTTPS图示"}})]),t._v(" "),_("h2",{attrs:{id:"你知道https使用的是什么加密机制吗"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#你知道https使用的是什么加密机制吗"}},[t._v("#")]),t._v(" 你知道HTTPS使用的是什么加密机制吗？")]),t._v(" "),_("p",[t._v("HTTPS采用共享密钥加密（对称加密）和公开密钥加密（非对称加密）两者并用的混合加密机制。")]),t._v(" "),_("p",[t._v("之所以采用混合的方式是为了解决密钥传送的问题, 密钥在传送的过程中也可能出现泄露的风险。")]),t._v(" "),_("p",[t._v("使用非对称加密算法，利用公钥加密随机密钥，拿到私钥之后进行解密，当这个安全通路创建完毕之后，再使用对称加密的方式进行信息通讯。")]),t._v(" "),_("p",[t._v("公开加密与共享密钥加密相比速度要慢。")]),t._v(" "),_("p",[_("img",{attrs:{src:v(316),alt:"混合加密方式"}})]),t._v(" "),_("h2",{attrs:{id:"你对options请求了解多少"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#你对options请求了解多少"}},[t._v("#")]),t._v(" 你对options请求了解多少？")]),t._v(" "),_("p",[t._v("options请求，又称作预检请求，这种请求只有跨域的时候才会出现，且只有在复杂请求时候才会出现，默认情况下get和post都是简单请求，按理来说是不会出现的，但是如果自己定义了header信息之类的，这样就变成了复杂请求，在发送post之前，会有一个预检请求信息，询问服务端是否支持跨域。如果不是发送的get或者post请求，我们认为是复杂请求。options请求的间隔时间是可以服务控制的。")]),t._v(" "),_("h2",{attrs:{id:"tcp和udp有什么区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp和udp有什么区别"}},[t._v("#")]),t._v(" TCP和UDP有什么区别？")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://juejin.cn/post/6844903806103191559",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文章"),_("OutboundLink")],1)]),t._v(" "),_("p",[t._v("TCP和UDP都是传输层的协议，位于我们熟悉的HTTP协议所在的应用层的下一层。")]),t._v(" "),_("p",[t._v("UDP协议和和TCP协议一样用于处理数据包，具有如下的特点：")]),t._v(" "),_("ul",[_("li",[t._v("1、面向无连接：首先 UDP 是不需要和 TCP一样在发送数据前进行三次握手建立连接的，想发数据就可以开始发送了，不会对数据报文进行任何拆分和拼接操作。具体来说：\n"),_("ul",[_("li",[t._v("在发送端，应用层将数据传递给传输层的 UDP 协议，UDP 只会给数据增加一个UDP头，标识下是UDP协议，然后就传递给网络层了。")]),t._v(" "),_("li",[t._v("在接收端，网络层将数据传递给传输层，UDP 只去除 IP 报文头就传递给应用层，不会任何拼接操作。")])])]),t._v(" "),_("li",[t._v("2、有单播、多播，广播的功能。：UDP 不止支持一对一的传输方式，同样支持一对多，多对多，多对一的方式，也就是说 UDP 提供了单播，多播，广播的功能。")]),t._v(" "),_("li",[t._v("3、UDP是面向报文的：对于应用层传递下的报文，既不合并，也不拆分，而是保留这些报文的边界。因此，应用程序必须选择合适大小的报文。")]),t._v(" "),_("li",[t._v("4、不可靠性：首先不可靠性体现在无连接上，通信都不需要建立连接，想发就发，这样的情况肯定不可靠。并且收到什么数据就传递什么数据，并且也不会备份数据，发送数据也不会关心对方是否已经正确接收到数据了。再者网络环境时好时坏，但是 UDP 因为没有拥塞控制，一直会以恒定的速度发送数据。即使网络条件不好，也不会对发送速率进行调整。这样实现的弊端就是在网络条件不好的情况下可能会导致丢包，但是优点也很明显，在某些实时性要求高的场景（比如电话会议）就需要使用 UDP 而不是 TCP。")]),t._v(" "),_("li",[_("ol",{attrs:{start:"5"}},[_("li",[t._v("头部开销小，传输数据报文时是很高效的。")])])])]),t._v(" "),_("p",[t._v("TCP协议全称是传输控制协议是一种面向连接的、可靠的、基于字节流的传输层通信协议, TCP 是面向连接的、可靠的流协议。流就是指不间断的数据结构，你可以把它想象成排水管中的水流。")]),t._v(" "),_("p",[t._v("TCP协议的特点：")]),t._v(" "),_("ul",[_("li",[t._v("1、面向连接，发送数据之前，必须建立连接，建立连接的方法是”三次握手“。")]),t._v(" "),_("li",[t._v("2、仅支持单播传输，每条TCP传输连接只能有两个端点，只能进行点对点的数据传输，不支持多播和广播传输方式。")]),t._v(" "),_("li",[t._v("3、面向字节流：TCP不像UDP一样那样一个个报文独立地传输，而是在不保留报文边界的情况下以字节流方式进行传输。")]),t._v(" "),_("li",[t._v("4、可靠传输：对于可靠传输，判断丢包，误码靠的是TCP的段编号以及确认号。TCP为了保证报文传输的可靠，就给每个包一个序号，同时序号也保证了传送到接收端实体的包的按序接收。然后接收端实体对已成功收到的字节发回一个相应的确认(ACK)；如果发送端实体在合理的往返时延(RTT)内未收到确认，那么对应的数据（假设丢失了）将会被重传。")]),t._v(" "),_("li",[t._v("5、提供拥塞控制:  当网络出现拥塞的时候，TCP能够减小向网络注入数据的速率和数量，缓解拥塞。")])]),t._v(" "),_("p",[_("img",{attrs:{src:v(317),alt:"TCP和UDP"}})]),t._v(" "),_("h2",{attrs:{id:"浏览器缓存机制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存机制"}},[t._v("#")]),t._v(" 浏览器缓存机制")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://juejin.cn/post/6844903593275817998",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文章"),_("OutboundLink")],1)]),t._v(" "),_("p",[t._v("浏览器每次发起请求，都会在浏览器缓存中查找该请求的结果和缓存标识。")]),t._v(" "),_("p",[t._v("浏览器每次拿到返回的请求结果都会将该结果和缓存标识存入浏览器缓存中")]),t._v(" "),_("p",[t._v("我们根据是否需要向服务器重新发起HTTP请求将缓存过程分为两部分:")]),t._v(" "),_("ul",[_("li",[t._v("强制缓存")]),t._v(" "),_("li",[t._v("协商缓存")])]),t._v(" "),_("p",[t._v("什么是强制缓存：强制缓存就是向浏览器缓存查找该请求结果，并根据该结果的缓存规则来决定是否使用该缓存结果的过程，强制缓存的情况主要有三种，如下：")]),t._v(" "),_("ul",[_("li",[t._v("不存在缓存结果或者缓存标识，强制缓存失效，则直接向服务器发起请求，和第一次请求一致。")]),t._v(" "),_("li",[t._v("存在该缓存结果和缓存标识，但是结果已经失效，强制缓存失效，则使用协商缓存(暂不分析)")]),t._v(" "),_("li",[t._v("存在该缓存结果和缓存标识，并且没有失效，强制缓存生效，直接返回该结果。")])]),t._v(" "),_("p",[t._v("强制缓存的缓存规则受到 Expires 和 Cache-Control的控制，其中Cache-Control优先级比Expires高。")]),t._v(" "),_("p",[t._v("当浏览器向服务器发起请求时，服务器会将缓存规则放入HTTP响应报文的HTTP头中和请求结果一起返回给浏览器。")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("Expires: Expires是HTTP/1.0控制网页缓存的字段，其值为服务器返回该请求结果缓存的到期时间，即再次发起该请求时，如果客户端的时间小于Expires的值时，直接使用缓存结果。")])]),t._v(" "),_("li",[_("p",[t._v("Cache-Control：在HTTP/1.1中，Cache-Control是最重要的规则，主要用于控制网页缓存，主要取值为：")]),t._v(" "),_("ul",[_("li",[t._v("public：所有内容都将被缓存（客户端和代理服务器都可缓存）")]),t._v(" "),_("li",[t._v("private：所有内容只有客户端可以缓存，Cache-Control的默认取值")]),t._v(" "),_("li",[t._v("no-cache：客户端缓存内容，但是是否使用缓存则需要经过协商缓存来验证决定")]),t._v(" "),_("li",[t._v("no-store：所有内容都不会被缓存，即不使用强制缓存，也不使用协商缓存")]),t._v(" "),_("li",[t._v("max-age=xxx (xxx is numeric)：缓存内容将在xxx秒后失效")])])])]),t._v(" "),_("p",[t._v("什么是协商缓存：协商缓存就是强制缓存失效后，浏览器携带缓存标识向服务器发起请求，由服务器根据缓存标识决定是否使用缓存的过程，主要有以下两种情况：")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("协商缓存生效，返回304")])]),t._v(" "),_("li",[_("p",[t._v("协商缓存失效，返回200和请求结果结果")])])]),t._v(" "),_("p",[t._v("协商缓存的标识也是在响应报文的HTTP头中和请求结果一起返回给浏览器的，控制协商缓存的字段分别有:")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("Last-Modified: Last-Modified是服务器响应请求时，返回该资源文件在服务器最后被修改的时间")])]),t._v(" "),_("li",[_("p",[t._v("If-Modified-Since: If-Modified-Since则是客户端再次发起该请求时，携带上次请求返回的Last-Modified值，通过此字段值告诉服务器该资源上次请求返回的最后被修改时间。服务器收到该请求，发现请求头含有If-Modified-Since字段，则会根据If-Modified-Since的字段值与该资源在服务器的最后被修改时间做对比，若服务器的资源最后被修改时间大于If-Modified-Since的字段值，则重新返回资源，状态码为200；否则则返回304，代表资源无更新，可继续使用缓存文件。")])]),t._v(" "),_("li",[_("p",[t._v("Etag: Etag是服务器响应请求时，返回当前资源文件的一个唯一标识。")])]),t._v(" "),_("li",[_("p",[t._v("If-None-Match: If-None-Match是客户端再次发起该请求时，携带上次请求返回的唯一标识Etag值，通过此字段值告诉服务器该资源上次请求返回的唯一标识值。服务器收到该请求后，发现该请求头中含有If-None-Match，则会根据If-None-Match的字段值与该资源在服务器的Etag值做对比，一致则返回304，代表资源无更新，继续使用缓存文件；不一致则重新返回资源文件，状态码为200")])])]),t._v(" "),_("blockquote",[_("p",[t._v("Etag / If-None-Match的优先级比Last-Modified / If-Modified-Since高。")])]),t._v(" "),_("p",[t._v("总结：\n强制缓存优先于协商缓存进行，若强制缓存(Expires和Cache-Control)生效则直接使用缓存，若不生效则进行协商缓存(Last-Modified / If-Modified-Since和Etag / If-None-Match)，协商缓存由服务器决定是否使用缓存，若协商缓存失效，那么代表该请求的缓存失效，重新获取请求结果，再存入浏览器缓存中；生效则返回304，继续使用缓存。")])])}),[],!1,null,null,null);_.default=e.exports}}]);