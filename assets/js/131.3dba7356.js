(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{507:function(s,n,t){"use strict";t.r(n);var a=t(14),e=Object(a.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("路径 被定义为一条从树中任意节点出发，沿父节点-子节节点连接，达到任意节点的序列，同一个节点在一条路径序列中至多出现一次，该路径至少包含一个节点，且不一定经过根节点。")]),s._v(" "),n("p",[s._v("路径和是路径中节点值的总和。")]),s._v(" "),n("p",[s._v("给你一个二叉树的根节点 root，返回其 最大路径和。")]),s._v(" "),n("h2",{attrs:{id:"示例1"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#示例1"}},[s._v("#")]),s._v(" 示例1")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(" 1\n/ \\\n2  3\n\n输入： root = [1,2,3]\n输出： 6\n解释： 最优化的路径是 2 -> 1 -> 3 路径和为  2+1+3 = 6 \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("TODO 这个题目现在思考还有有些早")])])}),[],!1,null,null,null);n.default=e.exports}}]);